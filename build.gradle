def configDir = new File(rootDir, 'config')

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        classpath 'com.antwerkz.github:github-release-gradle-plugin:1.0.0-RC2'
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.3'
    }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.7'
}

allprojects {
  apply plugin: 'java'
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  configurations {
    provided
    provided.extendsFrom(compile)
  }
}

configure(subprojects) {
  apply plugin: 'checkstyle'
  apply plugin: 'findbugs'

  group = 'com.antwerkz.afton'
  version = '0.1'

  sourceCompatibility = '1.7'
  targetCompatibility = '1.7'

  configurations {
    provided
  }

  project.archivesBaseName = "afton-${project.name}"

  repositories {
    mavenCentral()
    mavenLocal()
    maven {
     url "https://m2proxy.atlassian.com/repository/public"
   }
  }

  sourceSets.main.compileClasspath += configurations.provided
  sourceSets.test.compileClasspath += configurations.provided

  if (properties['xlint']) {
    tasks.withType(Compile) {
      options.compilerArgs << "-Xlint:unchecked"
    }
  }

  project.ext.buildingWith = { n -> project.hasProperty(n) && project.property(n).toBoolean()
  }

  /* Code quality */
  checkstyle {
    configFile = new File("$configDir/checkstyle.xml")
  }

  findbugs {
    sourceSets = [sourceSets.main]
  }

  tasks.withType(FindBugs) {
    reports {
      xml.enabled = project.buildingWith('xmlReports.enabled')
      html.enabled = !project.buildingWith('xmlReports.enabled')
    }
  }

  javadoc {
    options.author = true
    options.version = true
    options.links 'http://docs.oracle.com/javase/7/docs/api/'
  }
}

project(':core') {
  dependencies {
    compile 'org.kohsuke:github-api:1.44'
    compile 'ch.qos.logback:logback-core:1.0.13'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'junit:junit:4.11'
    compile 'com.atlassian.jira:jira-rest-java-client:2.0.0-m2'
  }
}

project(':junit') {
  dependencies {
    compile 'junit:junit:4.11'
    compile project(':core')
  }
}

apply from: 'gradle/ide-settings.gradle'
apply from: 'gradle/release-process.gradle'

